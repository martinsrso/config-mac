let mapleader = ' '

set clipboard^=unnamed,unnamedplus
set matchpairs+=<:>
set ideajoin
set idearefactormode=keep
set ignorecase
set smartcase
set incsearch
set hlsearch
nnoremap <Esc> :nohlsearch<cr>

set highlightedyank
set NERDTree

map <C-c> <Esc>
noremap <leader>cc :edit ~/.ideavimrc<cr>
noremap <leader>cs :source ~/.ideavimrc<cr>:nohlsearch<cr>
nnoremap gcc :action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>

""" Some preferences shortcuts
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv
nnoremap Y y$
nnoremap ;w :wa<CR>
nnoremap ;q :q<CR>
nnoremap <leader><Esc> :nohls<return><esc>
vnoremap < <gv
vnoremap > >gv
vnoremap = =gv

sethandler <c-j> a:vim
sethandler <c-k> a:vim
sethandler <c-l> a:vim
sethandler <c-h> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <TAB> :action PreviousTab<CR>
nnoremap <s-TAB> :action NextTab<CR>

map <leader>wv <Action>(SplitVertically)
map <leader>wh <Action>(SplitHorizontally)
map <leader>ww <Action>(Unsplit)
map <leader>wa <Action>(UnsplitAll)

map <leader>ca <Action>(CopyAbsolutePath)
map <leader>cn <Action>(CopyFileName)
map <leader>cp <Action>(CopyContentRootPath)

nmap <leader>z :action ToggleDistractionFreeMode<cr>

" change font size
nmap + :action EditorIncreaseFontSize<CR>
nmap - :action EditorDecreaseFontSize<CR>
nmap <leader>= :action EditorResetFontSize<CR>

""" Terminal
nnoremap <leader>sh :action ActivateTerminalToolWindow<CR>
nnoremap <leader>te :action Terminal.OpenInTerminal<CR>

map <leader>sc <Action>(GotoClass)
map <leader>sf <Action>(GotoFile)
map <leader>ss <Action>(GotoSymbol)
map <leader>sa <Action>(GotoAction)
map <leader>gd <Action>(GotoDeclaration)
map <leader>gy <Action>(GotoTypeDeclaration)
map <leader>gi <Action>(GotoImplementation)
map <leader>gt <Action>(GotoTest)
map <leader>gm <Action>(GotoSuperMethod)
map <leader>gl <Action>(GotoLine)

map <C-;> <Action>(RecentFiles)
map <leader><leader> <Action>(ReformatCode)

nmap gr :action ShowUsages<CR>

nnoremap [e :action GotoNextError<CR>
nnoremap ]e :action GotoPreviousError<CR>

nmap <leader>ri :action Inline<CR>
nmap <leader>rr :action RenameElement<CR>
nmap <leader>rev :action IntroduceVariable<CR>
vmap <leader>rev :action IntroduceVariable<CR>
nmap <leader>rem :action ExtractMethod<CR>
vmap <leader>rem :action ExtractMethod<CR>
nmap <leader>rv :action ShowIntentionActions<CR>
nmap <leader>rm :action Move<CR>
nmap <leader>ro :action OptimizeImports<CR>
nmap <leader>rg :action Generate<CR>
nnoremap <leader>r :action Refactorings.QuickListPopupAction<CR>

nmap <leader>a :NERDTreeToggle<CR>
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'
let g:NERDTreeQuitOnOpen=1